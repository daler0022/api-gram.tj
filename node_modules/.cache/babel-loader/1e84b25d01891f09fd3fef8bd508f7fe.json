{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport axios from \"axios\";\nexport default {\n  state: {\n    token: localStorage.getItem('user-token') || '',\n    status: ''\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    }\n  },\n  actions: {\n    AUTH_REQUEST: function (_AUTH_REQUEST) {\n      function AUTH_REQUEST(_x, _x2) {\n        return _AUTH_REQUEST.apply(this, arguments);\n      }\n\n      AUTH_REQUEST.toString = function () {\n        return _AUTH_REQUEST.toString();\n      };\n\n      return AUTH_REQUEST;\n    }(function (_ref, user) {\n      var commit = _ref.commit,\n          dispatch = _ref.dispatch;\n      return new Promise(function (resolve, reject) {\n        // The Promise used for router redirect in login\n        commit([AUTH_REQUEST]);\n        axios({\n          url: 'auth',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.token;\n          localStorage.setItem('user-token', token); // store the token in localstorage\n\n          commit(AUTH_SUCCESS, token); // you have your token, now log in your user :)\n\n          dispatch(USER_REQUEST);\n          resolve(resp);\n        }).catch(function (err) {\n          commit(AUTH_ERROR, err);\n          localStorage.removeItem('user-token'); // if the request fails, remove any possible user token if possible\n\n          reject(err);\n        });\n      });\n    })\n  },\n  mutations: {\n    AUTH_REQUEST: function AUTH_REQUEST(state) {\n      state.status = 'loading';\n    },\n    AUTH_SUCCESS: function AUTH_SUCCESS(state, token) {\n      state.status = 'success';\n      state.token = token;\n    },\n    AUTH_ERROR: function AUTH_ERROR(state) {\n      state.status = 'error';\n    }\n  }\n};","map":{"version":3,"names":["axios","state","token","localStorage","getItem","status","getters","isAuthenticated","authStatus","actions","AUTH_REQUEST","user","commit","dispatch","Promise","resolve","reject","url","data","method","then","resp","setItem","AUTH_SUCCESS","USER_REQUEST","catch","err","AUTH_ERROR","removeItem","mutations"],"sources":["/home/daler/map/src/store/auth.module.js"],"sourcesContent":["import axios from \"axios\"\nexport default {\n    state: {\n        token: localStorage.getItem('user-token') || '',\n        status: '',\n    },\n    getters: {\n        isAuthenticated: state => !!state.token,\n        authStatus: state => state.status,\n    },\n    actions: {\n        AUTH_REQUEST: ({commit, dispatch}, user) => {\n          return new Promise((resolve, reject) => { // The Promise used for router redirect in login\n            commit([AUTH_REQUEST])\n            axios({url: 'auth', data: user, method: 'POST' })\n              .then(resp => {\n                const token = resp.data.token\n                localStorage.setItem('user-token', token) // store the token in localstorage\n                commit(AUTH_SUCCESS, token)\n                // you have your token, now log in your user :)\n                dispatch(USER_REQUEST)\n                resolve(resp)\n              })\n            .catch(err => {\n              commit(AUTH_ERROR, err)\n              localStorage.removeItem('user-token') // if the request fails, remove any possible user token if possible\n              reject(err)\n            })\n          })\n        }\n    },\n    mutations: {\n        AUTH_REQUEST: (state) => {\n          state.status = 'loading'\n        },\n        AUTH_SUCCESS: (state, token) => {\n          state.status = 'success'\n          state.token = token\n        },\n        AUTH_ERROR: (state) => {\n          state.status = 'error'\n        },\n    }\n}"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACXC,KAAK,EAAE;IACHC,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,KAAsC,EAD1C;IAEHC,MAAM,EAAE;EAFL,CADI;EAKXC,OAAO,EAAE;IACLC,eAAe,EAAE,yBAAAN,KAAK;MAAA,OAAI,CAAC,CAACA,KAAK,CAACC,KAAZ;IAAA,CADjB;IAELM,UAAU,EAAE,oBAAAP,KAAK;MAAA,OAAIA,KAAK,CAACI,MAAV;IAAA;EAFZ,CALE;EASXI,OAAO,EAAE;IACLC,YAAY;MAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA,EAAE,gBAAqBC,IAArB,EAA8B;MAAA,IAA5BC,MAA4B,QAA5BA,MAA4B;MAAA,IAApBC,QAAoB,QAApBA,QAAoB;MAC1C,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;QAAE;QACxCJ,MAAM,CAAC,CAACF,YAAD,CAAD,CAAN;QACAV,KAAK,CAAC;UAACiB,GAAG,EAAE,MAAN;UAAcC,IAAI,EAAEP,IAApB;UAA0BQ,MAAM,EAAE;QAAlC,CAAD,CAAL,CACGC,IADH,CACQ,UAAAC,IAAI,EAAI;UACZ,IAAMnB,KAAK,GAAGmB,IAAI,CAACH,IAAL,CAAUhB,KAAxB;UACAC,YAAY,CAACmB,OAAb,CAAqB,YAArB,EAAmCpB,KAAnC,EAFY,CAE8B;;UAC1CU,MAAM,CAACW,YAAD,EAAerB,KAAf,CAAN,CAHY,CAIZ;;UACAW,QAAQ,CAACW,YAAD,CAAR;UACAT,OAAO,CAACM,IAAD,CAAP;QACD,CARH,EASCI,KATD,CASO,UAAAC,GAAG,EAAI;UACZd,MAAM,CAACe,UAAD,EAAaD,GAAb,CAAN;UACAvB,YAAY,CAACyB,UAAb,CAAwB,YAAxB,EAFY,CAE0B;;UACtCZ,MAAM,CAACU,GAAD,CAAN;QACD,CAbD;MAcD,CAhBM,CAAP;IAiBD,CAlBW;EADP,CATE;EA8BXG,SAAS,EAAE;IACPnB,YAAY,EAAE,sBAACT,KAAD,EAAW;MACvBA,KAAK,CAACI,MAAN,GAAe,SAAf;IACD,CAHM;IAIPkB,YAAY,EAAE,sBAACtB,KAAD,EAAQC,KAAR,EAAkB;MAC9BD,KAAK,CAACI,MAAN,GAAe,SAAf;MACAJ,KAAK,CAACC,KAAN,GAAcA,KAAd;IACD,CAPM;IAQPyB,UAAU,EAAE,oBAAC1B,KAAD,EAAW;MACrBA,KAAK,CAACI,MAAN,GAAe,OAAf;IACD;EAVM;AA9BA,CAAf"},"metadata":{},"sourceType":"module"}